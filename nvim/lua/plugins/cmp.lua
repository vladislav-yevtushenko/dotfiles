
local cmp = require('cmp')
local lspkind = require('lspkind')

cmp.setup {
	snippet = {

		-- REQUIRED - you must specify a snippet engine
		expand = function(args)
			require 'luasnip'.lsp_expand(args.body)
		end,
	},
	window = {
		completion  = cmp.config.window.bordered(),
		documentation = cmp.config.window.bordered({ border = 'single'})
	},
	mapping = {

		-- –í—ã–∑–æ–≤ –º–µ–Ω—é –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è
		['<C-Space>'] = cmp.mapping(cmp.mapping.complete(), { 'i', 'c' }),
		--		['<CR>'] = cmp.config.disable,                      -- –Ø –Ω–µ –ª—é–±–ª—é, –∫–æ–≥–¥–∞ –≤–µ—â–∏ –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω—è—é—Ç—Å—è –Ω–∞ <Enter>
		['<CR>'] = cmp.mapping.confirm({ select = true }), -- –ê –≤–æ—Ç –Ω–∞ <C-y> –≤–ø–æ–ª–Ω–µ –æ–∫

		-- –ò—Å–ø–æ–ª—å–∑—É–µ–º <C-e> –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø—Ä–µ—Ä–≤–∞—Ç—å –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
		['<C-e>'] = cmp.mapping({
			i = cmp.mapping.abort(), -- –ü—Ä–µ—Ä—ã–≤–∞–µ–º –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
			c = cmp.mapping.close(), -- –ó–∞–∫—Ä—ã–≤–∞–µ–º –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
		}),
		['<S-Tab>'] = cmp.mapping(cmp.mapping.select_prev_item(), { 'i', 'c' }),
		['<Tab>'] = cmp.mapping(cmp.mapping.select_next_item(), { 'i', 'c' }),
	},

	sources = cmp.config.sources({
		{ name = 'nvim_lsp' },  -- LSP üëÑ
		{ name = 'nvim_lsp_signature_help' }, -- –ü–æ–º–æ—â—å –ø—Ä–∏ –≤–≤–µ–¥–µ–Ω–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤ –º–µ—Ç–æ–¥–∞—Ö üöÅ
		{ name = 'nvim_lsp_document_symbol' },
		{ name = 'luasnip' }, -- Luasnip üêå
		{ name = 'buffer' },    -- –ë—É—Ñ—Ñ–µ—Ä—ã üêÉ
		{ name = 'path' },      -- –ü—É—Ç–∏ ü™§
	}, {
	}),
	formatting = {
		format = lspkind.cmp_format({
			mode = 'symbol', -- show only symbol annotations
			maxwidth = 50, -- prevent the popup from showing more than provided characters (e.g 50 will not show more than 50 characters)
		})
	}
}
